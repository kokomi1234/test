# docker-compose.yml

services:
  redis-master:
    image: redis:7
    container_name: redis-master
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - redis-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  redis-slave1:
    image: redis:7
    container_name: redis-slave1
    command: redis-server --replicaof redis-master 6379
    depends_on:
      redis-master:
        condition: service_healthy
    networks:
      - redis-net

  redis-slave2:
    image: redis:7
    container_name: redis-slave2
    command: redis-server --replicaof redis-master 6379
    depends_on:
      redis-master:
        condition: service_healthy
    networks:
      - redis-net

  sentinel1:
    image: redis:7
    container_name: sentinel1
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    volumes:
      - ./config/sentinel1.conf:/usr/local/etc/redis/sentinel.conf
    ports:
      - "26379:26379"
    depends_on:
      redis-master:
        condition: service_healthy
      redis-slave1:
        condition: service_started
      redis-slave2:
        condition: service_started
    networks:
      - redis-net

  sentinel2:
    image: redis:7
    container_name: sentinel2
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    volumes:
      - ./config/sentinel2.conf:/usr/local/etc/redis/sentinel.conf
    ports:
      - "26380:26379"
    depends_on:
      redis-master:
        condition: service_healthy
      redis-slave1:
        condition: service_started
      redis-slave2:
        condition: service_started
    networks:
      - redis-net

  sentinel3:
    image: redis:7
    container_name: sentinel3
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    volumes:
      - ./config/sentinel3.conf:/usr/local/etc/redis/sentinel.conf
    ports:
      - "26381:26379"
    depends_on:
      redis-master:
        condition: service_healthy
      redis-slave1:
        condition: service_started
      redis-slave2:
        condition: service_started
    networks:
      - redis-net

networks:
  redis-net:
    driver: bridge
